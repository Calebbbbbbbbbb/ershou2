【代码架构文档】
[
  {
    "模块名称": "普通用户模块",
    "文件路径": "/user/user_controller.py",
    "包含函数": [
      {
        "函数名": "发起物品登记请求",
        "输入参数": [
          "item_name: str",
          "description: str",
          "pickup_location: str",
          "time: str",
          "item_image: bytes"
        ],
        "返回类型": "str",
        "功能说明": "发起物品登记请求，对输入进行初步检查，若错误给出提示，考虑系统易用性、可操作性和可移植性，同时提供常见问题解答的操作指南，控制操作步骤不超过5步，完成操作平均时间不超过1分钟"
      },
      {
        "函数名": "发起失物发布请求",
        "输入参数": [
          "lost_description: str",
          "lost_location: str",
          "time: str",
          "contact_info: str",
          "item_image: bytes"
        ],
        "返回类型": "str",
        "功能说明": "发起失物发布请求，对用户联系方式加密存储，对输入进行初步检查，若错误给出提示，考虑系统易用性、可操作性和可移植性，同时提供常见问题解答的操作指南，控制操作步骤不超过5步，完成操作平均时间不超过1分钟"
      },
      {
        "函数名": "查看匹配推荐信息",
        "输入参数": [],
        "返回类型": "dict",
        "功能说明": "查看匹配推荐信息，控制信息匹配时间在3秒内，信息推荐时间在2秒内"
      },
      {
        "函数名": "发起身份验证请求",
        "输入参数": [
          "lost_details: str"
        ],
        "返回类型": "str",
        "功能说明": "发起身份验证请求，用于联系与认领管理相关的身份验证"
      }
    ]
  },
  {
    "模块名称": "管理员模块",
    "文件路径": "/admin/admin_controller.py",
    "包含函数": [
      {
        "函数名": "发起身份验证审核请求",
        "输入参数": [
          "user_info: dict"
        ],
        "返回类型": "str",
        "功能说明": "发起身份验证审核请求，设置复杂登录密码及访问权限，定期备份和加密系统数据，确保系统合规性和可维护性，保证代码注释覆盖率达到90%以上，制定系统架构设计方案，确保架构支持新功能模块的无缝集成"
      },
      {
        "函数名": "发起信息审核请求",
        "输入参数": [
          "lost_and_found_info: dict"
        ],
        "返回类型": "str",
        "功能说明": "发起信息审核请求，定期备份和加密系统数据，确保系统合规性和可维护性，保证代码注释覆盖率达到90%以上，制定系统架构设计方案，确保架构支持新功能模块的无缝集成"
      },
      {
        "函数名": "信息匹配与推荐 - 人工审核",
        "输入参数": [],
        "返回类型": "dict",
        "功能说明": "管理员进行信息匹配与推荐的人工审核操作"
      },
      {
        "函数名": "联系与认领管理审核",
        "输入参数": [],
        "返回类型": "str",
        "功能说明": "管理员对联系与认领管理相关操作进行审核"
      }
    ]
  },
  {
    "模块名称": "失物招领系统服务模块",
    "文件路径": "/service/lost_and_found_service.py",
    "包含函数": [
      {
        "函数名": "处理物品登记请求",
        "输入参数": [
          "item_name: str",
          "description: str",
          "pickup_location: str",
          "time: str",
          "item_image: bytes"
        ],
        "返回类型": "str",
        "功能说明": "处理物品登记请求，在高并发情况下（并发用户数达到1000时，系统请求成功率不低于99%，平均响应时间不超过2秒）保持稳定运行，控制响应时间不超过3秒，具备容错性，对错误输入给出明确错误原因和具体正确输入指引，保证系统每周7天、每天24小时可用，支持系统可扩展性，建立标准化的接口规范"
      },
      {
        "函数名": "处理失物发布请求",
        "输入参数": [
          "lost_description: str",
          "lost_location: str",
          "time: str",
          "contact_info: str",
          "item_image: bytes"
        ],
        "返回类型": "str",
        "功能说明": "处理失物发布请求，对用户联系方式使用符合行业标准的加密算法加密，并存储在具备安全防护机制的数据库中，在高并发情况下（并发用户数达到1000时，系统请求成功率不低于99%，平均响应时间不超过2秒）保持稳定运行，控制响应时间不超过3秒，具备容错性，对错误输入给出明确错误原因和具体正确输入指引，保证系统每周7天、每天24小时可用，支持系统可扩展性，建立标准化的接口规范"
      },
      {
        "函数名": "处理匹配推荐信息请求",
        "输入参数": [],
        "返回类型": "dict",
        "功能说明": "处理匹配推荐信息请求，控制信息匹配时间在3秒内，信息推荐时间在2秒内"
      },
      {
        "函数名": "处理身份验证请求",
        "输入参数": [
          "lost_details: str"
        ],
        "返回类型": "str",
        "功能说明": "处理身份验证请求"
      },
      {
        "函数名": "处理身份验证审核请求",
        "输入参数": [
          "user_info: dict"
        ],
        "返回类型": "str",
        "功能说明": "处理身份验证审核请求，若身份验证成功则触发发送认领通知"
      },
      {
        "函数名": "处理信息审核请求",
        "输入参数": [
          "lost_and_found_info: dict"
        ],
        "返回类型": "str",
        "功能说明": "处理信息审核请求，用于管理后台与审核功能相关操作"
      },
      {
        "函数名": "发送认领通知",
        "输入参数": [],
        "返回类型": "None",
        "功能说明": "发送认领通知"
      },
      {
        "函数名": "数据备份",
        "输入参数": [],
        "返回类型": "None",
        "功能说明": "服务器每天自动对数据进行备份"
      },
      {
        "函数名": "数据恢复",
        "输入参数": [],
        "返回类型": "None",
        "功能说明": "服务器在数据丢失时在1小时内完成数据恢复"
      },
      {
        "函数名": "上传物品图片处理",
        "输入参数": [
          "item_image: bytes"
        ],
        "返回类型": "str",
        "功能说明": "处理物品登记和失物发布时上传的物品图片"
      }
    ]
  }
]

【类图建模结构】
{
  "classes": [
    {
      "name": "UserController",
      "attributes": ["service: LostAndFoundService"],
      "methods": [
        "发起物品登记请求(item_name: str, description: str, pickup_location: str, time: str, item_image: bytes): str",
        "发起失物发布请求(lost_description: str, lost_location: str, time: str, contact_info: str, item_image: bytes): str",
        "查看匹配推荐信息(): dict",
        "发起身份验证请求(lost_details: str): str"
      ]
    },
    {
      "name": "AdminController",
      "attributes": ["service: LostAndFoundService"],
      "methods": [
        "发起身份验证审核请求(user_info: dict): str",
        "发起信息审核请求(lost_and_found_info: dict): str",
        "信息匹配与推荐 - 人工审核(): dict",
        "联系与认领管理审核(): str"
      ]
    },
    {
      "name": "LostAndFoundService",
      "attributes": [],
      "methods": [
        "处理物品登记请求(item_name: str, description: str, pickup_location: str, time: str, item_image: bytes): str",
        "处理失物发布请求(lost_description: str, lost_location: str, time: str, contact_info: str, item_image: bytes): str",
        "处理匹配推荐信息请求(): dict",
        "处理身份验证请求(lost_details: str): str",
        "处理身份验证审核请求(user_info: dict): str",
        "处理信息审核请求(lost_and_found_info: dict): str",
        "发送认领通知(): None",
        "数据备份(): None",
        "数据恢复(): None",
        "上传物品图片处理(item_image: bytes): str"
      ]
    }
  ],
  "relations": [
    {
      "from": "UserController",
      "to": "LostAndFoundService"
    },
    {
      "from": "AdminController",
      "to": "LostAndFoundService"
    }
  ]
}

【类图PlantUML代码】
@startuml
class UserController {
  +service: LostAndFoundService
  +发起物品登记请求(item_name: str, description: str, pickup_location: str, time: str, item_image: bytes): str
  +发起失物发布请求(lost_description: str, lost_location: str, time: str, contact_info: str, item_image: bytes): str
  +查看匹配推荐信息(): dict
  +发起身份验证请求(lost_details: str): str
}
class AdminController {
  +service: LostAndFoundService
  +发起身份验证审核请求(user_info: dict): str
  +发起信息审核请求(lost_and_found_info: dict): str
  +信息匹配与推荐 - 人工审核(): dict
  +联系与认领管理审核(): str
}
class LostAndFoundService {
  +处理物品登记请求(item_name: str, description: str, pickup_location: str, time: str, item_image: bytes): str
  +处理失物发布请求(lost_description: str, lost_location: str, time: str, contact_info: str, item_image: bytes): str
  +处理匹配推荐信息请求(): dict
  +处理身份验证请求(lost_details: str): str
  +处理身份验证审核请求(user_info: dict): str
  +处理信息审核请求(lost_and_found_info: dict): str
  +发送认领通知(): None
  +数据备份(): None
  +数据恢复(): None
  +上传物品图片处理(item_image: bytes): str
}
UserController --> LostAndFoundService
AdminController --> LostAndFoundService
@enduml